/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import CodigosDeFuncionamiento.*;
import java.awt.event.KeyEvent;
import java.awt.geom.Area;
import java.util.ArrayList;
import javax.swing.JLabel;

/**
 * Ventana del juego Imposible
 * @author Rafael Navarro Prieto
 * @version 1.0
 */
public class Imposible extends javax.swing.JDialog {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * Hilos de los esbirros
	 */
    Thread esbirro, esbirro1, esbirro2, esbirro3, esbirro4, esbirro5, esbirro6, esbirro7, esbirro8;
    /**
     * Hilo de la meta
     */
    Thread metaH;
    /**
     * Hilo de los muros
     */
    Thread palaH, pala1H, pala2H, pala3H, pala4H;
    /**
     * Ventana principal
     */
    public Minijuegos ventanaPrincipal;
    /**
     * ArrayList que contiene todos los posibles obstáculos para el jugador
     */
    ArrayList<JLabel> contenido = new ArrayList<JLabel>();
    /**
     * Valores del eje x e eje y iniciales del jugador
     */
    int xDefecto, yDefecto;

    /**
     * Creates new form Imposible
     */
    public Imposible(Minijuegos principal) {
        initComponents();
        rellenarArra(); // rellenamos el arrayList con todos los obstaculos
        ventanaPrincipal = principal;
        iniciarHilos(); // iniciamos todos los hilos del programa
        xDefecto = personaje.getX();
        yDefecto = personaje.getY();
        this.metaH = new Llegada("Salida", personaje, this, meta);
        metaH.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pala2 = new javax.swing.JLabel();
        pala1 = new javax.swing.JLabel();
        qweqwe = new javax.swing.JLabel();
        pala = new javax.swing.JLabel();
        pala3 = new javax.swing.JLabel();
        esbirrillo = new javax.swing.JLabel();
        esbirrillo1 = new javax.swing.JLabel();
        esbirrillo2 = new javax.swing.JLabel();
        esbirrillo3 = new javax.swing.JLabel();
        esbirrillo4 = new javax.swing.JLabel();
        esbirrillo5 = new javax.swing.JLabel();
        esbirrillo6 = new javax.swing.JLabel();
        esbirrillo7 = new javax.swing.JLabel();
        esbirrillo8 = new javax.swing.JLabel();
        muroInferior = new javax.swing.JLabel();
        muroSuperior = new javax.swing.JLabel();
        muroIzquierdo = new javax.swing.JLabel();
        personaje = new javax.swing.JLabel();
        meta = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("El juego mas difícil de los minijuegos - ¿Conseguirás ganar?");
        setMaximumSize(null);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pala2.setBackground(new java.awt.Color(255, 255, 255));
        pala2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Orangeburn-textura-del-fuego.jpg"))); // NOI18N
        pala2.setOpaque(true);
        getContentPane().add(pala2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 200, 20));

        pala1.setBackground(new java.awt.Color(255, 255, 255));
        pala1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Orangeburn-textura-del-fuego.jpg"))); // NOI18N
        pala1.setOpaque(true);
        getContentPane().add(pala1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 20, 110));

        qweqwe.setBackground(new java.awt.Color(255, 255, 255));
        qweqwe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Orangeburn-textura-del-fuego.jpg"))); // NOI18N
        qweqwe.setOpaque(true);
        getContentPane().add(qweqwe, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 140, 70));

        pala.setBackground(new java.awt.Color(255, 255, 255));
        pala.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Orangeburn-textura-del-fuego.jpg"))); // NOI18N
        pala.setOpaque(true);
        getContentPane().add(pala, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 20, 110));

        pala3.setBackground(new java.awt.Color(255, 255, 255));
        pala3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Orangeburn-textura-del-fuego.jpg"))); // NOI18N
        pala3.setOpaque(true);
        getContentPane().add(pala3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 200, 20));

        esbirrillo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/esbirrillo.png"))); // NOI18N
        getContentPane().add(esbirrillo, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, -1, 30));

        esbirrillo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/esbirrillo.png"))); // NOI18N
        getContentPane().add(esbirrillo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, -1, 30));

        esbirrillo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/esbirrillo.png"))); // NOI18N
        getContentPane().add(esbirrillo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 230, -1, 30));

        esbirrillo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/esbirrillo.png"))); // NOI18N
        getContentPane().add(esbirrillo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, -1, 30));

        esbirrillo4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/esbirrillo.png"))); // NOI18N
        getContentPane().add(esbirrillo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 170, -1, 30));

        esbirrillo5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/esbirrillo.png"))); // NOI18N
        getContentPane().add(esbirrillo5, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, -1, 30));

        esbirrillo6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/esbirrillo.png"))); // NOI18N
        getContentPane().add(esbirrillo6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, -1, 30));

        esbirrillo7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/esbirrillo.png"))); // NOI18N
        getContentPane().add(esbirrillo7, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 70, -1, 30));

        esbirrillo8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/esbirrillo.png"))); // NOI18N
        getContentPane().add(esbirrillo8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, -1, 30));

        muroInferior.setBackground(new java.awt.Color(102, 102, 102));
        muroInferior.setOpaque(true);
        getContentPane().add(muroInferior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 307, 690, 27));

        muroSuperior.setBackground(new java.awt.Color(102, 102, 102));
        muroSuperior.setOpaque(true);
        getContentPane().add(muroSuperior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 27));

        muroIzquierdo.setBackground(new java.awt.Color(102, 102, 102));
        muroIzquierdo.setOpaque(true);
        getContentPane().add(muroIzquierdo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 20, 330));

        personaje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/personaje.png"))); // NOI18N
        getContentPane().add(personaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 20, -1));

        meta.setBackground(new java.awt.Color(255, 0, 0));
        meta.setOpaque(true);
        getContentPane().add(meta, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, 50, 290));

        fondo.setBackground(new java.awt.Color(0, 0, 0));
        fondo.setOpaque(true);
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cerrar();
    }//GEN-LAST:event_formWindowClosing

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
       switch (evt.getKeyCode()) {
            case KeyEvent.VK_LEFT: // MOVE LEFT
            	desplazamiento(-5,0);
                break;
            case KeyEvent.VK_RIGHT:// MOVE RIGHT
            	desplazamiento(5,0);
                break;
            case KeyEvent.VK_UP: // MOVE UP
            	desplazamiento(0,-5);
                break;
            case KeyEvent.VK_DOWN: // MOVE DOWN
            	desplazamiento(0,5);
                break;
        }    }//GEN-LAST:event_formKeyPressed
    /**
     * Desplazamiento del personaje
     * @param x valor a incrementar en el eje x
     * @param y valor a incrementar en el eje y
     */
    private void desplazamiento(int x, int y) {
    	   if (ComprobarColisionMuros(personaje, contenido)) { // si no hay colisión
               personaje.setLocation(personaje.getX()+x,personaje.getY()+ y); // nos desplazamos
           } else { //en caso contrario
               personaje.setLocation(xDefecto, yDefecto); //volvemos a la posición inicial
           }		
	}


	// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel esbirrillo;
    private javax.swing.JLabel esbirrillo1;
    private javax.swing.JLabel esbirrillo2;
    private javax.swing.JLabel esbirrillo3;
    private javax.swing.JLabel esbirrillo4;
    private javax.swing.JLabel esbirrillo5;
    private javax.swing.JLabel esbirrillo6;
    private javax.swing.JLabel esbirrillo7;
    private javax.swing.JLabel esbirrillo8;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel meta;
    private javax.swing.JLabel muroInferior;
    private javax.swing.JLabel muroIzquierdo;
    private javax.swing.JLabel muroSuperior;
    private javax.swing.JLabel pala;
    private javax.swing.JLabel pala1;
    private javax.swing.JLabel pala2;
    private javax.swing.JLabel pala3;
    private javax.swing.JLabel personaje;
    private javax.swing.JLabel qweqwe;
    // End of variables declaration//GEN-END:variables
    /**
     * Rellena el arrayList con todos los elementos susceptibles a producir colisiones
     */
    private void rellenarArra() {
        contenido.add(esbirrillo);
        contenido.add(esbirrillo1);
        contenido.add(esbirrillo2);
        contenido.add(esbirrillo3);
        contenido.add(esbirrillo4);
        contenido.add(esbirrillo5);
        contenido.add(esbirrillo6);
        contenido.add(esbirrillo7);
        contenido.add(esbirrillo8);
        contenido.add(muroInferior);
        contenido.add(muroIzquierdo);
        contenido.add(muroSuperior);
        contenido.add(pala2);
        contenido.add(pala1);
        contenido.add(qweqwe);
        contenido.add(pala);
        contenido.add(pala3);
    }
    /**
     * Se ejecuta cada vez que la ventana se esta cerrando
     * @return devuelve -1
     */
    private int cerrar() {
        dispose();
        ventanaPrincipal.setVisible(true);
        ventanaPrincipal.toFront();
        return -1;
    }
    /**
     * Instancia e inicia todos los hilos del programa
     */
    private void iniciarHilos() {
        esbirro2 = new Desplazamiento("esbirro2", esbirrillo2,personaje, muroSuperior, muroInferior);
        esbirro3 = new Desplazamiento("esbirro3", esbirrillo3,personaje, muroSuperior, muroInferior);
        esbirro4 = new Desplazamiento("esbirro4", esbirrillo4,personaje, muroSuperior, muroInferior);
        esbirro5 = new Desplazamiento("esbirro5", esbirrillo5,personaje, muroSuperior, muroInferior);
        esbirro6 = new Desplazamiento("esbirro6", esbirrillo6,personaje, muroSuperior, muroInferior);
        esbirro7 = new Desplazamiento("esbirro7", esbirrillo7,personaje, muroSuperior, muroInferior);
        esbirro8 = new Desplazamiento("esbirro8", esbirrillo8,personaje, muroSuperior, muroInferior);
        //esbirros patrullando
        esbirro = new DesplazamientoCiclico("esbirro", esbirrillo,personaje);
        esbirro1 = new DesplazamientoCiclico("esbirro1", esbirrillo1,personaje);

        palaH = new Desplazamiento("Pala", pala,personaje, muroSuperior, muroInferior);
        pala1H = new Desplazamiento("Pala1", pala1,personaje, muroSuperior, muroInferior);
        pala2H = new Desplazamiento("Pala2", pala2,personaje, muroIzquierdo, meta);
        pala3H = new Desplazamiento("Pala3", pala3,personaje, muroIzquierdo, meta);
        esbirro.start();
        esbirro1.start();
        esbirro2.start();
        esbirro3.start();
        esbirro4.start();
        esbirro5.start();
        esbirro6.start();
        esbirro7.start();
        esbirro8.start();
        
        palaH.start();
        pala1H.start();
        pala2H.start();
        pala3H.start();

    }
    /**
     * Comprueba las posibles colisiones al desplazarse el jugador
     * @param personaje JLabel del jugador
     * @param contenido ArrayList que contiene todos los posibles obstáculos
     * @return devuelve false si ocurre alguna colisión o true si no se realizo una colisión
     */
    private boolean ComprobarColisionMuros(JLabel personaje, ArrayList<JLabel> contenido) {
        Area areaA = new Area(personaje.getBounds());
        for (int i = 0; i < contenido.size(); i++) {
            Area areaB = new Area(contenido.get(i).getBounds());
            if (areaA.intersects(areaB.getBounds2D())) {
                return false;
            }

        }

        return true;

    }

}
